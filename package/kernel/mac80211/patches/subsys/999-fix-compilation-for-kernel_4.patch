--- a/net/mac80211/tx.c
+++ b/net/mac80211/tx.c
@@ -3834,7 +3834,11 @@ struct ieee80211_txq *ieee80211_next_txq
 {
 	struct ieee80211_local *local = hw_to_local(hw);
 	struct airtime_sched_info *air_sched;
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0))
 	u64 now = ktime_get_coarse_boottime_ns();
+#else
+	u64 now = ktime_get_boottime_ns();
+#endif
 	struct ieee80211_txq *ret = NULL;
 	struct airtime_info *air_info;
 	struct txq_info *txqi = NULL;
@@ -3961,7 +3965,11 @@ void ieee80211_update_airtime_weight(str
 	u64 weight_sum = 0;
 
 	if (unlikely(!now))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0))
 		now = ktime_get_coarse_boottime_ns();
+#else
+		now = ktime_get_boottime_ns();
+#endif
 
 	lockdep_assert_held(&air_sched->lock);
 
@@ -3987,7 +3995,11 @@ void ieee80211_schedule_txq(struct ieee8
 	struct ieee80211_local *local = hw_to_local(hw);
 	struct txq_info *txqi = to_txq_info(txq);
 	struct airtime_sched_info *air_sched;
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0))
 	u64 now = ktime_get_coarse_boottime_ns();
+#else
+	u64 now = ktime_get_boottime_ns();
+#endif
 	struct airtime_info *air_info;
 	u8 ac = txq->ac;
 	bool was_active;
@@ -4044,8 +4056,13 @@ static void __ieee80211_unschedule_txq(s
 		air_sched->schedule_pos = rb_prev(&txqi->schedule_order);
 
 	if (!purge)
-		airtime_set_active(air_sched, air_info,
-				   ktime_get_coarse_boottime_ns());
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0))
+	airtime_set_active(air_sched, air_info,
+					ktime_get_coarse_boottime_ns());
+#else
+	airtime_set_active(air_sched, air_info,
+					ktime_get_boottime_ns());
+#endif
 
 	rb_erase_cached(&txqi->schedule_order,
 			&air_sched->active_txqs);
@@ -4133,7 +4150,11 @@ bool ieee80211_txq_may_transmit(struct i
 	if (RB_EMPTY_NODE(&txqi->schedule_order))
 		goto out;
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0))
 	now = ktime_get_coarse_boottime_ns();
+#else
+	now = ktime_get_boottime_ns();
+#endif
 
 	/* Like in ieee80211_next_txq(), make sure the first station in the
 	 * scheduling order is eligible for transmission to avoid starvation.
